{"version":3,"sources":["redux/auth/auth-operathions.js","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/Route/PrivateRoute/PrivateRoute.js","components/Route/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/contacts/contacts-action.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","authOperathions","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","response","authSelectors","getIsLoggenIn","isLoggenIn","getUsername","user","name","getIsFetchingCurrent","isFetchingCurrentUser","UserMenu","useSelector","dispatch","useDispatch","className","type","onClick","Navigation","isLoggedIn","to","exact","activeClassName","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","RegisterView","lazy","LoginView","ContactsView","HomeView","App","useEffect","fallback","path","contactItems","createReducer","actions","fatchContactSuccess","payload","addContactSuccess","onDeleteContactSuccess","filter","id","loading","fatchContactRequest","fatchContactError","addContactRequest","addContactError","onDeleteContactRequest","onDeleteContactError","changeFilter","combineReducers","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","querySelector","createAction","contactsAction"],"mappings":"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","file":"static/js/main.1cdc7ab3.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = ''\r\n  },\r\n}\r\n\r\nconst register = createAsyncThunk('auth/register', async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials)\r\n    token.set(data.token)\r\n    return data\r\n  } catch (error) {}\r\n})\r\n\r\nconst logIn = createAsyncThunk('auth/login', async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials)\r\n    token.set(data.token)\r\n    return data\r\n  } catch (error) {}\r\n})\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout')\r\n    token.unset()\r\n  } catch (error) {}\r\n})\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState()\r\n    const persistedToken = state.auth.token\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue()\r\n    }\r\n    token.set(persistedToken)\r\n    try {\r\n      const response = await axios.get('/users/current')\r\n      return response.data\r\n    } catch (error) {}\r\n  }\r\n)\r\n\r\nconst authOperathions = { register, logIn, logOut, fetchCurrentUser }\r\n\r\nexport default authOperathions\r\n","const getIsLoggenIn = (state) => state.auth.isLoggenIn\r\n\r\nconst getUsername = (state) => state.auth.user.name\r\n\r\nconst getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser\r\n\r\nconst authSelectors = {\r\n  getIsLoggenIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n}\r\n\r\nexport default authSelectors\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport authOperathions from '../../redux/auth/auth-operathions'\r\nimport '../UserMenu/UserMenu.scss'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\n\r\nexport function UserMenu() {\r\n  const user = useSelector(authSelectors.getUsername)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"user_menu\">\r\n      <span>{`Hello ${user}`}</span>\r\n      <button\r\n        className=\"button-logout\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          dispatch(authOperathions.logOut())\r\n        }}\r\n      >\r\n        logout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../Navigation/Navigation.scss'\r\nimport { UserMenu } from '../UserMenu/UserMenu'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggenIn)\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav>\r\n        <NavLink to=\"/\" exact className=\"link\" activeClassName=\"activlink\">\r\n          Home\r\n        </NavLink>\r\n        {!isLoggedIn && (\r\n          <>\r\n            <NavLink\r\n              to=\"/register\"\r\n              exact\r\n              className=\"link\"\r\n              activeClassName=\"activlink\"\r\n            >\r\n              Registration\r\n            </NavLink>\r\n\r\n            <NavLink to=\"/login\" className=\"link\" activeClassName=\"activlink\">\r\n              LogIn\r\n            </NavLink>\r\n          </>\r\n        )}\r\n\r\n        {isLoggedIn && (\r\n          <NavLink\r\n            to=\"/contactsbook\"\r\n            className=\"link\"\r\n            activeClassName=\"activlink\"\r\n          >\r\n            contactsbook\r\n          </NavLink>\r\n        )}\r\n      </nav>\r\n      {isLoggedIn && <UserMenu />}\r\n    </div>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport authSelectors from '../../../redux/auth/auth-selectors'\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggenIn = useSelector(authSelectors.getIsLoggenIn)\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggenIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport authSelectors from '../../../redux/auth/auth-selectors'\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggenIn)\r\n  const shouldRedirect = isLoggedIn && restricted\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  )\r\n}\r\n","import { Switch } from 'react-router'\n\nimport { useEffect, Suspense, lazy } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport authOperathions from './redux/auth/auth-operathions'\nimport authSelectors from './redux/auth/auth-selectors'\n\nimport Navigation from './components/Navigation/Navigation'\nimport PrivateRoute from './components/Route/PrivateRoute/PrivateRoute'\nimport PublicRoute from './components/Route/PublicRoute/PublicRoute'\nimport './App.scss'\n\nconst RegisterView = lazy(() => import('./views/registerViews/register'))\nconst LoginView = lazy(() => import('./views/loginViews/login'))\nconst ContactsView = lazy(() => import('./views/contactsViews/contactViews'))\nconst HomeView = lazy(() => import('./views/homeViews/homeViews'))\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent)\n\n  useEffect(() => {\n    dispatch(authOperathions.fetchCurrentUser())\n  }, [dispatch])\n\n  return (\n    !isFetchingCurrentUser && (\n      <>\n        <div className=\"AppRoot\">\n          <Navigation />\n        </div>\n\n        <div className=\"AppRoot\">\n          <Switch>\n            <Suspense fallback={<p>Загружаем....</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute\n                path=\"/register\"\n                restricted\n                redirectTo=\"/contactsbook\"\n              >\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" restricted redirectTo=\"/contactsbook\">\n                <LoginView />\n              </PublicRoute>\n\n              {/* <Route path=\"/register\" component={RegisterView} /> */}\n\n              {/* <Route path=\"/login\" component={LoginView} /> */}\n\n              <PrivateRoute path=\"/contactsbook\" redirectTo=\"/\">\n                <ContactsView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </div>\n      </>\n    )\n  )\n}\nexport default App\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { combineReducers } from 'redux'\r\nimport actions from './contacts-action'\r\n\r\nconst contactItems = createReducer([], {\r\n  [actions.fatchContactSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.onDeleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fatchContactRequest]: () => true,\r\n  [actions.fatchContactSuccess]: () => false,\r\n  [actions.fatchContactError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.onDeleteContactRequest]: () => true,\r\n  [actions.onDeleteContactSuccess]: () => false,\r\n  [actions.onDeleteContactError]: () => false,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n  contactItems,\r\n  filter,\r\n  loading,\r\n})\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport authOperathions from './auth-operathions'\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggenIn: false,\r\n  isFetchingCurrentUser: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n\r\n  extraReducers: {\r\n    [authOperathions.register.fulfilled](state, action) {\r\n      state.user = action.payload.user\r\n      state.token = action.payload.token\r\n      state.isLoggenIn = true\r\n    },\r\n    [authOperathions.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user\r\n      state.token = action.payload.token\r\n      state.isLoggenIn = true\r\n    },\r\n    [authOperathions.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null }\r\n      state.token = null\r\n      state.isLoggenIn = false\r\n    },\r\n\r\n    [authOperathions.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true\r\n    },\r\n\r\n    [authOperathions.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload\r\n      state.isLoggenIn = true\r\n      state.isFetchingCurrentUser = false\r\n    },\r\n\r\n    [authOperathions.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false\r\n    },\r\n  },\r\n})\r\n\r\nexport default authSlice.reducer\r\n","import {\r\n  // combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\n\r\nimport storage from 'redux-persist/lib/storage'\r\nimport contactsReducer from './contacts/contacts-reducer'\r\nimport authReducer from './auth/auth-slice'\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n]\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    // auth: authReducer\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport './index.scss'\nimport { store, persistor } from './redux/store'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root')\n)\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nconst fatchContactRequest = createAction('contacts/fatchContactRequest')\r\nconst fatchContactSuccess = createAction('contacts/fatchContactSuccess')\r\nconst fatchContactError = createAction('contacts/fatchContactError')\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest')\r\nconst addContactSuccess = createAction('contacts/addContactSuccess')\r\nconst addContactError = createAction('contacts/addContactError')\r\n\r\nconst onDeleteContactRequest = createAction('contacts/onDeleteContactRequest')\r\nconst onDeleteContactSuccess = createAction('contacts/onDeleteContactSuccess')\r\nconst onDeleteContactError = createAction('contacts/onDeleteContactError')\r\n\r\nconst changeFilter = createAction('contacts/changeFilter')\r\n\r\nconst contactsAction = {\r\n  fatchContactRequest,\r\n  fatchContactSuccess,\r\n  fatchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  onDeleteContactError,\r\n  onDeleteContactRequest,\r\n  onDeleteContactSuccess,\r\n  changeFilter,\r\n}\r\n\r\nexport default contactsAction\r\n"],"sourceRoot":""}