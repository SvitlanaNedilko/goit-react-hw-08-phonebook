{"version":3,"sources":["redux/auth/auth-selectors.js","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/Route/PrivateRoute/PrivateRoute.js","components/Route/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/contacts/contacts-action.js","redux/auth/auth-operathions.js"],"names":["authSelectors","getIsLoggenIn","state","auth","isLoggenIn","getUsername","user","name","getIsFetchingCurrent","isFetchingCurrentUser","UserMenu","useSelector","dispatch","useDispatch","className","Typography","variant","Button","color","onClick","authOperathions","logOut","Navigation","isLoggedIn","AppBar","position","Toolbar","to","BASE_URL","exact","activeClassName","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","RegisterView","lazy","LoginView","ContactsView","HomeView","App","useEffect","fetchCurrentUser","fallback","path","contactItems","createReducer","actions","fatchContactSuccess","_","payload","addContactSuccess","onDeleteContactSuccess","filter","id","loading","fatchContactRequest","fatchContactError","addContactRequest","addContactError","onDeleteContactRequest","onDeleteContactError","changeFilter","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","register","fulfilled","action","logIn","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","querySelector","createAction","contactsAction","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","post","data","thunkAPI","getState","persistedToken","rejectWithValue","get","response"],"mappings":"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","file":"static/js/main.3bff81f6.chunk.js","sourcesContent":["const getIsLoggenIn = (state) => state.auth.isLoggenIn\r\n\r\nconst getUsername = (state) => state.auth.user.name\r\n\r\nconst getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser\r\n\r\nconst authSelectors = {\r\n  getIsLoggenIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n}\r\n\r\nexport default authSelectors\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport authOperathions from '../../redux/auth/auth-operathions'\r\nimport './UserMenu.scss'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\nimport { Button, Typography } from '@material-ui/core'\r\n\r\nexport function UserMenu() {\r\n  const user = useSelector(authSelectors.getUsername)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"user_menu\">\r\n      <Typography variant=\"subtitle1\">{`Hello ${user}`}</Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          dispatch(authOperathions.logOut())\r\n        }}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../Navigation/Navigation.scss'\r\nimport { UserMenu } from '../UserMenu/UserMenu'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\nimport { BASE_URL } from '../../.'\r\nimport { AppBar, Toolbar } from '@material-ui/core'\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggenIn)\r\n  return (\r\n    <AppBar position=\"static\" color=\"default\">\r\n      <Toolbar>\r\n        <NavLink\r\n          to={`${BASE_URL}/`}\r\n          exact\r\n          className=\"link\"\r\n          activeClassName=\"activlink\"\r\n        >\r\n          Home\r\n        </NavLink>\r\n        {!isLoggedIn && (\r\n          <>\r\n            <NavLink\r\n              to={`${BASE_URL}/register`}\r\n              exact\r\n              className=\"link\"\r\n              activeClassName=\"activlink\"\r\n            >\r\n              Registration\r\n            </NavLink>\r\n\r\n            <NavLink\r\n              to={`${BASE_URL}/login`}\r\n              className=\"link\"\r\n              activeClassName=\"activlink\"\r\n            >\r\n              LogIn\r\n            </NavLink>\r\n          </>\r\n        )}\r\n        {isLoggedIn && (\r\n          <>\r\n            <NavLink\r\n              to={`${BASE_URL}/contactsbook`}\r\n              className=\"link\"\r\n              activeClassName=\"activlink\"\r\n            >\r\n              contactsbook\r\n            </NavLink>\r\n            <UserMenu />\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport authSelectors from '../../../redux/auth/auth-selectors'\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggenIn = useSelector(authSelectors.getIsLoggenIn)\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggenIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport authSelectors from '../../../redux/auth/auth-selectors'\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggenIn)\r\n  const shouldRedirect = isLoggedIn && restricted\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  )\r\n}\r\n","import { Switch } from 'react-router'\n\nimport { useEffect, Suspense, lazy } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport authOperathions from './redux/auth/auth-operathions'\nimport authSelectors from './redux/auth/auth-selectors'\n\nimport Navigation from './components/Navigation/Navigation'\nimport PrivateRoute from './components/Route/PrivateRoute/PrivateRoute'\nimport PublicRoute from './components/Route/PublicRoute/PublicRoute'\nimport './App.scss'\nimport { BASE_URL } from '.'\n\nconst RegisterView = lazy(() => import('./views/registerViews/register'))\nconst LoginView = lazy(() => import('./views/loginViews/login'))\nconst ContactsView = lazy(() => import('./views/contactsViews/contactViews'))\nconst HomeView = lazy(() => import('./views/homeViews/homeViews'))\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent)\n\n  useEffect(() => {\n    dispatch(authOperathions.fetchCurrentUser())\n  }, [dispatch])\n\n  return (\n    !isFetchingCurrentUser && (\n      <>\n        <Navigation />\n\n        <div className=\"AppRoot\">\n          <Switch>\n            <Suspense fallback={<p>Загружаем....</p>}>\n              <PublicRoute exact path={`${BASE_URL}/`}>\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute\n                path={`${BASE_URL}/register`}\n                restricted\n                redirectTo={`${BASE_URL}/contactsbook`}\n              >\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute\n                path={`${BASE_URL}/login`}\n                restricted\n                redirectTo={`${BASE_URL}/contactsbook`}\n              >\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute\n                path={`${BASE_URL}/contactsbook`}\n                redirectTo={`${BASE_URL}/`}\n              >\n                <ContactsView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </div>\n      </>\n    )\n  )\n}\nexport default App\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { combineReducers } from 'redux'\r\nimport actions from './contacts-action'\r\n\r\nconst contactItems = createReducer([], {\r\n  [actions.fatchContactSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.onDeleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fatchContactRequest]: () => true,\r\n  [actions.fatchContactSuccess]: () => false,\r\n  [actions.fatchContactError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.onDeleteContactRequest]: () => true,\r\n  [actions.onDeleteContactSuccess]: () => false,\r\n  [actions.onDeleteContactError]: () => false,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n  contactItems,\r\n  filter,\r\n  loading,\r\n})\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport authOperathions from './auth-operathions'\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggenIn: false,\r\n  isFetchingCurrentUser: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n\r\n  extraReducers: {\r\n    [authOperathions.register.fulfilled](state, action) {\r\n      state.user = action.payload.user\r\n      state.token = action.payload.token\r\n      state.isLoggenIn = true\r\n    },\r\n    [authOperathions.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user\r\n      state.token = action.payload.token\r\n      state.isLoggenIn = true\r\n    },\r\n    [authOperathions.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null }\r\n      state.token = null\r\n      state.isLoggenIn = false\r\n    },\r\n\r\n    [authOperathions.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true\r\n    },\r\n\r\n    [authOperathions.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload\r\n      state.isLoggenIn = true\r\n      state.isFetchingCurrentUser = false\r\n    },\r\n\r\n    [authOperathions.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false\r\n    },\r\n  },\r\n})\r\n\r\nexport default authSlice.reducer\r\n","import {\r\n  // combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\n\r\nimport storage from 'redux-persist/lib/storage'\r\nimport contactsReducer from './contacts/contacts-reducer'\r\nimport authReducer from './auth/auth-slice'\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n]\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    // auth: authReducer\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport './index.scss'\nimport { store, persistor } from './redux/store'\nimport { BrowserRouter } from 'react-router-dom'\n\nexport const BASE_URL = '/goit-react-hw-08-phonebook'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root')\n)\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nconst fatchContactRequest = createAction('contacts/fatchContactRequest')\r\nconst fatchContactSuccess = createAction('contacts/fatchContactSuccess')\r\nconst fatchContactError = createAction('contacts/fatchContactError')\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest')\r\nconst addContactSuccess = createAction('contacts/addContactSuccess')\r\nconst addContactError = createAction('contacts/addContactError')\r\n\r\nconst onDeleteContactRequest = createAction('contacts/onDeleteContactRequest')\r\nconst onDeleteContactSuccess = createAction('contacts/onDeleteContactSuccess')\r\nconst onDeleteContactError = createAction('contacts/onDeleteContactError')\r\n\r\nconst changeFilter = createAction('contacts/changeFilter')\r\n\r\nconst contactsAction = {\r\n  fatchContactRequest,\r\n  fatchContactSuccess,\r\n  fatchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  onDeleteContactError,\r\n  onDeleteContactRequest,\r\n  onDeleteContactSuccess,\r\n  changeFilter,\r\n}\r\n\r\nexport default contactsAction\r\n","import axios from 'axios'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = ''\r\n  },\r\n}\r\n\r\nconst register = createAsyncThunk('auth/register', async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials)\r\n    token.set(data.token)\r\n    return data\r\n  } catch (error) {}\r\n})\r\n\r\nconst logIn = createAsyncThunk('auth/login', async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials)\r\n    token.set(data.token)\r\n    return data\r\n  } catch (error) {}\r\n})\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout')\r\n    token.unset()\r\n  } catch (error) {}\r\n})\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState()\r\n    const persistedToken = state.auth.token\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue()\r\n    }\r\n    token.set(persistedToken)\r\n    try {\r\n      const response = await axios.get('/users/current')\r\n      return response.data\r\n    } catch (error) {}\r\n  }\r\n)\r\n\r\nconst authOperathions = { register, logIn, logOut, fetchCurrentUser }\r\n\r\nexport default authOperathions\r\n"],"sourceRoot":""}