{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/loginViews/login.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","onSubmit","e","preventDefault","authOperathions","logIn","className","type","onChange"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,wHIAvF,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMf,EAAc,EAAdA,MACtC,OAAQe,GACN,IAAK,QACH,OAAOL,EAASV,GAClB,IAAK,WACH,OAAOY,EAAYZ,GACrB,QACE,SAWN,OACE,8BACE,uBAAMgB,SATW,SAACC,GACpBA,EAAEC,iBACFZ,EAASa,IAAgBC,MAAM,CAAEX,QAAOE,cACxCD,EAAS,IACTE,EAAY,KAKV,UACE,wBAAOS,UAAU,oBAAjB,2CAEE,uBACEC,KAAK,OACLtB,MAAOS,EACPM,KAAK,QAELQ,SAAUV,OAId,wBAAOQ,UAAU,oBAAjB,iDAEE,uBACEC,KAAK,OACLtB,MAAOW,EACPI,KAAK,WAELQ,SAAUV,OAGd,wBAAQS,KAAK,SAAb","file":"static/js/4.74d3a346.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport authOperathions from '../../redux/auth/auth-operathions'\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value)\r\n      case 'password':\r\n        return setPassword(value)\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(authOperathions.logIn({ email, password }))\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"ContactForm_Input\">\r\n          Почта\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            name=\"email\"\r\n            // value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className=\"ContactForm_Input\">\r\n          Пароль\r\n          <input\r\n            type=\"text\"\r\n            value={password}\r\n            name=\"password\"\r\n            // value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">LogIn</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}